// Test SMTP mail functionality
// This test will attempt to send an email through Gmail's SMTP server
// You'll need to edit the credentials below
// To get the credentials:
// - Go to https://myaccount.google.com/security and enable 2FA if you haven't
// Then go to https://myaccount.google.com/apppasswords and generate your app password
// Copy and replace the password here

void main() {
    println("NVGT Mail Test");
    println("==============\n");
    
    // Configuration - EDIT username and password
    string smtp_server = "smtp.gmail.com";
    int smtp_port = 587;  // 587 for STARTTLS, 465 for SSL
    string username = "edit@me.please";
    string password = "Something you should edit";
    string from_email = username;
    string cc_recipient = username;
    // Create a loop
    string to_email = username;
    
    smtp_client@ client = smtp_client();
    client.host = smtp_server;
    client.port = smtp_port;
    client.use_ssl = true;  // Enable SSL/TLS
    
    println("Connecting to " + smtp_server + ":" + smtp_port + "...");
    if (!client.connect()) {
        println("Failed to connect: " + client.last_error);
        return;
    }
    println("Connected successfully!");
    
    println("\nAuthenticating as " + username + "...");
    if (!client.login(username, password)) {
        println("Authentication failed: " + client.last_error);
        client.close();
        return;
    }
    println("Authenticated successfully!");
    
    mail_message@ msg = mail_message();
    msg.set_sender(from_email);
    msg.add_recipient(to_email);
    msg.set_subject("Test Email from NVGT");
    msg.set_content("Hello!\n\nThis is a test email sent from NVGT using the new mail wrapper.\n\nBest regards,\nNVGT Mail System");
    
    // We can cc ourselves
    msg.add_recipient(cc_recipient, RECIPIENT_CC);
    
    msg.add_attachment_string("test.txt", "This is the content of the test attachment.", "text/plain");
    
    if (!msg.add_attachment_file("readme.txt", "readme.md")) {
        println("Warning: Could not attach file: " + msg.last_error);
    }
    
    println("\nSending message...");
    if (!client.send_message(msg)) {
        println("Failed to send message: " + client.last_error);
        client.close();
        return;
    }
    println("Message sent successfully!");
    
    println("\nMessage details:");
    println("From: " + msg.sender);
    println("Subject: " + msg.subject);
    println("Recipients:");
    array<mail_recipient@>@ recipients = msg.get_recipients();
    for (uint i = 0; i < recipients.length(); i++) {
        mail_recipient@ r = recipients[i];
        string type_str = "TO";
        if (r.type == RECIPIENT_CC) type_str = "CC";
        else if (r.type == RECIPIENT_BCC) type_str = "BCC";
        println("  " + type_str + ": " + r.address + (r.real_name.empty() ? "" : " (" + r.real_name + ")"));
    }
    
    client.close();
    println("\nConnection closed.");
    
    println("\n\nTesting error handling...");
    smtp_client@ bad_client = smtp_client();
    bad_client.host = "invalid.smtp.server";
    bad_client.port = 25;
    
    if (!bad_client.connect()) {
        println("Expected error: " + bad_client.last_error);
    }
    
    smtp_client@ no_conn = smtp_client();
    if (!no_conn.send_message(msg)) {
        println("Expected error (no connection): " + no_conn.last_error);
    }
    
    println("\nTest completed!");
}