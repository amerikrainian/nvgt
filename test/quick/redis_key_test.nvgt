// NonVisual Gaming Toolkit (NVGT)
// Copyright (C) 2022-2024 Sam Tupy
// License: zlib (see license.md in the root of the NVGT distribution)

#pragma plugin redis

void main() {
    redis_client@ client = redis_client();

    if (!client.connect()) {
        println("Failed to connect: " + client.last_error);
        return;
    }

    client.del("test:key1");
    client.del("test:key2");
    client.del("test:key3");

    
    // Create test data of different types
    client.set("test:string", "String value");
    client.lpush("test:list", "list_item");
    client.sadd("test:set", "set_member");
    client.hset("test:hash", "field", "value");
    client.zadd("test:zset", 100, "member");
    
    // TYPE
    println("TYPE operations:");
    println("  test:string => " + client.type("test:string"));
    println("  test:list => " + client.type("test:list"));
    println("  test:set => " + client.type("test:set"));
    println("  test:hash => " + client.type("test:hash"));
    println("  test:zset => " + client.type("test:zset"));
    println("  test:nonexistent => " + client.type("test:nonexistent"));
    
    // KEYS
    array<string>@ keys = client.keys("test:*");
    println("\nKEYS test:* (" + keys.length() + " keys found):");
    for (uint i = 0; i < keys.length(); i++) {
        println("  '" + keys[i] + "'");
    }

    if (client.expire("test:list", 10)) {
        println("EXPIRE test:list 10 - OK");
    }

    int64 ttl = client.ttl("test:list");
    println("TTL test:list = " + ttl + " seconds");

    array<string>@ scan_result = client.scan(0, "test:*", 10);
    if (scan_result.length() > 0) {
        println("SCAN 0 MATCH test:* COUNT 10:");
        println("  Next cursor: " + scan_result[0]);
        println("  Keys found:");
        for (uint i = 1; i < scan_result.length(); i++) {
            println("    '" + scan_result[i] + "'");
        }
    }

    keys = client.keys("test:*");
    for (uint i = 0; i < keys.length(); i++) {
        client.del(keys[i]);
    }

    println("\nRedis Key Operations Test Complete!");
}