// Funcdef needed for calling methods
funcdef void r_void_uint(uint);

void test_async_exception_handling() {
	// Test that async properly captures exceptions
	string[] test_array;
	async<void> exctest(r_void_uint(test_array.remove_at), 0);
	exctest.wait();
	
	// Verify exception was caught
	assert(exctest.failed == true);
	assert(exctest.exception.length() > 0);
	assert(exctest.exception.find("out of bounds") >= 0 || exctest.exception.find("range") >= 0);
}

void test_async_basic_functionality() {
	// Test basic async operation with a simple function
	async<int> simple(simple_function);
	simple.wait();
	assert(simple.failed == false);
	assert(simple.value == 42);
	
	// Test try_wait
	async<int> slow(slow_function);
	assert(slow.try_wait(1) == false); // Should not complete in 1ms
	slow.wait(); // Now wait for completion
	assert(slow.value == 100);
}

int simple_function() {
	return 42;
}

int slow_function() {
	wait(10);
	return 100;
}